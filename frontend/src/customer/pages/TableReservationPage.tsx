import { formatDateTime } from "../../utils/formatDateTime";
import TableCard from "../components/TableCard";
import { useEffect, useMemo, useState } from "react";
import { useTableController } from "../controllers/TableControllers";
import { useNavigate } from "react-router-dom";

interface Props {
  userType?: string;
}

export default function TableReservationPage({ userType = "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤" }: Props) {
  const [now, setNow] = useState(new Date());
  const { tables, toggleTable } = useTableController(20);
  const [selectedTable, setSelectedTable] = useState<number | null>(null); // ‡πÇ‡∏ï‡πä‡∏∞‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ
  const [snackbar, setSnackbar] = useState<string | null>(null);
  const navigate = useNavigate(); // Get the navigate function

  const timeLabel = useMemo(() => formatDateTime(now), [now]);

  useEffect(() => {
    const tick = setInterval(() => setNow(new Date()), 60 * 1000);
    return () => clearInterval(tick);
  }, []);

  // --- Handle table click ---
  const handleTableSelect = (tableId: number) => {
    if (selectedTable === tableId) {
      // ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏ï‡πä‡∏∞‡πÄ‡∏î‡∏¥‡∏°
      setSelectedTable(null);
      toggleTable(tableId); // toggle ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÇ‡∏ï‡πä‡∏∞
    } else if (selectedTable === null) {
      // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏ï‡πä‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏ï‡πä‡∏∞‡∏ô‡∏µ‡πâ
      setSelectedTable(tableId);
      toggleTable(tableId);
    } else {
      // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÇ‡∏ï‡πä‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏ï‡πà‡∏Å‡∏î‡πÇ‡∏ï‡πä‡∏∞‡∏≠‡∏∑‡πà‡∏ô ‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
      setSnackbar("‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏ï‡πä‡∏∞‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏•‡∏∞ 1 ‡πÇ‡∏ï‡πä‡∏∞‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô");
      setTimeout(() => setSnackbar(null), 3000);
    }
  };

  // --- Handle confirm booking ---
  const handleConfirm = () => {
    if (selectedTable !== null) {
      navigate(`/order/${selectedTable}`);
      setSnackbar(`‡∏à‡∏≠‡∏á‡πÇ‡∏ï‡πä‡∏∞ ${selectedTable} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß üéâ`);
      setTimeout(() => setSnackbar(null), 5000);
      
    } else {
      setSnackbar("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏ï‡πä‡∏∞‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô");
      setTimeout(() => setSnackbar(null), 3000);
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 p-4 md:p-6">
      {/* Top bar */}
      <div className="relative w-full rounded-2xl border border-sky-200 bg-sky-50 px-6 py-4 shadow-sm">
        <div className="absolute top-4 right-4">
          <div className="inline-flex items-center gap-2 rounded-2xl border border-slate-200 bg-white px-4 py-2 shadow-sm">
            <span className="text-sm text-slate-500">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</span>
            <span className="rounded-xl bg-slate-100 px-2 py-1 text-sm font-semibold text-slate-700">
              {userType}
            </span>
          </div>
        </div>
        <h1 className="text-3xl md:text-4xl font-bold text-slate-800">
          ‡∏£‡πâ‡∏≤‡∏ô‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏ä‡∏≤‡∏¢
        </h1>
        <div className="mt-2 text-sm text-slate-700">
          ‡πÄ‡∏ß‡∏•‡∏≤: <span className="font-medium">{timeLabel}</span>
        </div>
      </div>

      {/* ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÇ‡∏ï‡πä‡∏∞ */}
      <div className="mt-6 grid grid-cols-2 gap-4 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5">
        {tables.map((table) => (
          <TableCard
            key={table.id}
            table={table}
            onToggle={() => handleTableSelect(table.id)}
            isSelected={selectedTable === table.id} // ‡∏™‡πà‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏õ TableCard
          />
        ))}
      </div>

      {/* ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô fixed ‡∏Ç‡∏ß‡∏≤‡∏•‡πà‡∏≤‡∏á */}
      <button
        onClick={handleConfirm}
        className="fixed bottom-4 right-4 rounded-full bg-green-500 px-6 py-3 text-white font-semibold shadow-lg hover:bg-green-600"
      >
        ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
      </button>

      {/* Snackbar */}
      {snackbar && (
        <div className="fixed bottom-20 right-4 rounded bg-green-500 px-4 py-2 text-white shadow-lg">
          {snackbar}
        </div>
      )}
    </div>
  );
}
